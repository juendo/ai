extends ../../../views/mixins.jade

block heading
  .player-name
      span(style='color:#F7B628')
          | {{ $index == game.leader ? 'L ' : '' }}
      span(style='color:#AAA')
          | {{ $index == game.leader ? '| ' : '' }}
      span(style='color:#FFF')
          | {{ player.name.toUpperCase() }} 
      span(style='color:#AAA')
          | | 
      span(style='color:#FFF')
          | {{ actions.influence(player) }} 
      br
      span(style='color:#AAA')
          | {{ player.hand.length - actions.jackNum(player) }}
      span(style='color:#FFF')
          | /
      span(style='color:#777')
          | {{ actions.jackNum(player) }}
  .player-action-container
      .player-action(
        ng-style='{\
          "color": player.actions[0] && actionColors[player.actions[0].kind] === "FFF" ? "#000" : "#FFF",\
          "background-color": player.actions[0] ? "#" + actionColors[player.actions[0].kind] : "#222"\
        }'
      )
        | {{ player.actions[0].description }}
        | {{ actionNumber(player) > 1 && player.actions[0].kind !== "Rome Demands" ? " Ã— " + actionNumber(player) : "" }}
  .player-vault
      span(style='color:#FFF')
          | {{ player.vault.length }} 
      span(style='color:#AAA')
          | / {{ actions.vaultLimit(player) }}



block player
  +player-separator
    .client(
      ng-repeat='x in getArray(actions.clienteleLimit(player)) track by $index',
      ng-style='{\
        "background-color": "#" + (player.clientele[$index] ? actionColors[player.clientele[$index]] : "333"),\
        "height": 100 / actions.clienteleLimit(player) + "%"\
      }'
    )
  .pending
    .pending-center
      .pending-card(
        ng-repeat='card in player.pending track by $index',
        ng-click='inputs.pending(game, meta, {owner: $parent.$index, index: $index})',
        ng-style='{\
          "background-color": "#" + colors[card.color]\
        }'
      )
  .player-building-area(
    ng-if='true',
    ng-repeat='building in player.buildings track by $index',
    ng-style='{\
      "max-width": (game.players.length == 2 ? 23.75 : 31.666667) + "%",\
      "width" : buildingWidth(player.buildings.length + player.publicBuildings.length) + "%"\
    }'
  )
    img.building(
      ng-drop='true',
      ng-drop-success='inputs.drag(game, meta, {owner: $parent.$parent.$index, data: $data, index: $index})',
      ng-src='games/glory-to-rome/images/cards/{{ building.name }}.png',
      ng-alt='{{ building.name }}',
      ng-click='inputs.building(game, meta, {building: building, opponent: $parent.$parent.$index, index: $index})',
      ng-style='{\
        "border-color": "#" + (player.actions[0] ? actionBorderColors[player.actions[0].kind] : "000")\
      }',
      ng-class='{\
        "is-relevant": $parent.$parent.$index == game.currentPlayer\
          && actions.hasAbilityToUse(building.name, player)\
          && player.actions[0]\
          && relevantAction(building.name, player.actions[0])\
        }'
    )
    .materials-holder(
      ng-style='{\
        "background": "repeating-linear-gradient(\
          -45deg,\
          #FFF,\
          #FFF 7px,\
          #" + colors[building.siteColor] + " 7px, #" + colors[building.siteColor] + " 14px)"\
      }',
      ng-if='!building.done'
    )
      .materials(
        ng-style='{\
          "width": 17 * colorValues[building.siteColor] + "%"\
        }'
      )
        .material(
          ng-repeat='material in building.materials track by $index',
          ng-style='{\
            "width": 100 / colorValues[building.siteColor] + "%",\
            "background-color": "#" + colors[material]\
          }'
        )
  .player-building-area(
    ng-if='!!player.publicBuildings\
      && !actions.hasAbilityToUseWithoutPublicBuildings(building, player)',
    ng-repeat='building in player.publicBuildings track by $index',
    ng-style='{\
      "max-width": (game.players.length == 2 ? 23.75 : 31.666667) + "%",\
      "width" : buildingWidth(player.buildings.length + player.publicBuildings.length) + "%"\
    }'
  )
    img.building(
      ng-src='games/glory-to-rome/images/cards/{{ building }}.png',
      ng-alt='{{ building }}',
      ng-click='inputs.building(game, meta, {building: building, opponent: meta.you, index: $index})',
      ng-style='{\
        "border-color": "#" + (player.actions[0] ? actionBorderColors[player.actions[0].kind] : "000"),\
        "opacity" : "0.5"\
      }',
      ng-class='{\
        "is-relevant": $parent.$parent.$index == game.currentPlayer\
          && actions.hasAbilityToUse(building, player)\
          && player.actions[0]\
          && relevantAction(building, player.actions[0])\
        }'
    )
  .score-box(
    ng-if='game.finished',
    ng-style='{\
      "opacity": game.finished ? 1 : 0,\
      "background-color":\
        actions.winner(game).contains($index) ? "rgba(44, 167, 61, 0.5)" : "rgba(229, 2, 12, 0.5)"\
    }'
  )
    .score
      | {{ player.winner ? "" : actions.score(player)}}
    .vault
      .stockpile-padding
      .stockpile-center
        .stockpile-spacing.end(
          ng-if='player.vault.length > 0',
          ng-style='{\
            "width": 16.666667 / (player.vault.length * 2) + "%"\
          }'
        )
        .stockpile-material(
          ng-if='player.vault.length > 0',
          ng-repeat-start='material in player.vault track by $index',
          ng-style='{\
            "background-color": "#" + colors[material.color],\
            "width" : 83.333333 / player.vault.length + "%"\
          }'
        )
        .stockpile-spacing.end(
          ng-repeat-end='',
          ng-class='{\
            "end": $index === player.vault.length - 1\
          }',
          ng-style='{\
            "width": 16.666667 / (player.vault.length * ($index === player.vault.length - 1 ? 2 : 1)) + "%"\
          }'
        )
  .stockpile(
    ng-class='{\
      "is-current": player === game.players[game.currentPlayer]\
        && !game.finished\
    }'
  )
    .stockpile-padding
    .stockpile-center
      .stockpile-spacing.end(
        ng-if='player.stockpile.length > 0',
        ng-style='{\
          "width": 16.666667 / (player.stockpile.length * 2) + "%"\
        }'
      )
      .stockpile-material(
        ng-if='player.stockpile.length > 0',
        ng-repeat-start='material in player.stockpile track by $index',
        ng-drag='$parent.$parent.$index == meta.you',
        ng-drag-data='{\
          index: $index,\
          material: material\
        }', 
        ng-click='inputs.stockpile(game, meta, {owner: $parent.$parent.$index, index: $index})',
        ng-style='{\
          "background-color": "#" + colors[material],\
          "width": 83.333333 / player.stockpile.length + "%"\
        }',
        ng-class='{ "stockpile-selected": $parent.$parent.$index === meta.you && player.stockpileSelected === $index }'
      )
      .stockpile-spacing.end(
        ng-repeat-end='',
        ng-class='{\
          "end": $index === player.stockpile.length - 1\
        }',
        ng-style='{\
          "width" : 16.666667 / (player.stockpile.length * ($index == player.stockpile.length - 1 ? 2 : 1)) + "%"\
        }'
      )





block bottom
  #hand(
    ng-hover-hand=''
  )
    img.hand(
      ng-hover-card
      ng-drag='true', 
      ng-drag-data='{\
        index: $index,\
        card: c\
      }', 
      ng-click='inputs.hand(game, meta, $index)',
      ng-repeat='c in you().hand track by $index',
      style='left: {{ $index * spacing(you().hand.length) }}px;bottom:{{ 4 + (c.selected ? 4 : 0) }}%;{{ isDragging ? "height:92%;" : ""}};{{ c.selected ? "-webkit-filter:brightness(90%);" : "" }}',
      ng-src='games/glory-to-rome/images/cards/{{ c.name }}.png', 
      ng-alt='{{ c.name }}'
    )
  img.jack(
    ng-src='/games/glory-to-rome/images/cards/Jack.png',
    ng-alt='Jack',
    ng-click='inputs.jack(game, meta)'
  )
  .jack-counter
    | {{ game.pool.black }}
  img.deck(
    ng-src='/games/glory-to-rome/images/cards/deck.png',
    ng-alt='Deck',
    ng-click='inputs.deck(game, meta)'
  )
  .deck-counter
    | {{ game.deck.length }}
  .pool
    button.pool-counter(
      ng-drag='game.pool[color] > 0\
        && yourTurn()\
        && actions.hasAbilityToUse("Archway", you())',
      ng-drag-data='{color:color}',
      ng-repeat='color in poolColors',
      ng-click='inputs.pool(game, meta, color)',
      style='{{game.sites[color] == 0 ? ("border-style:solid;border-color:#" + colors[color] + ";") : ""}}background-color:#{{ colors[color] }};color: white;background:repeating-linear-gradient(45deg,#{{colors[color]}},#{{colors[color]}} {{game.sites[color] > 0 ? "7" : "0"}}px,#{{(6 - game.sites[color] < game.players.length) ? colors[color] : "222"}} {{game.sites[color] > 0 ? "7" : "0"}}px,#{{(6 - game.sites[color] < game.players.length) ? colors[color] : "222"}} 14px)'
    )
      | {{ game.pool[color] > 0 ? game.pool[color] : "" }}
  button.skip(
    ng-if='yourTurn()\
      && canSkipCurrentAction(you(), game)',
    ng-click='inputs.skip(game, meta)'
  )
    | {{ you().actions[0] && you().actions[0].kind == 'Rome Demands' ? "GLORY TO ROME" : "SKIP ACTION" }}
  button.skip.nudge(
    ng-if='(!yourTurn()) || game.finished',
    ng-click='(!yourTurn() || game.finished)\
      && triggerReconnect()'
  )
    | NUDGE
